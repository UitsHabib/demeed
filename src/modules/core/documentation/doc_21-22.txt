1. Github is actually a database.
2. project's codebase are kept in github.
---

3. git init -> to initialize git in project.
4. ls -> to check the list.
5. ls -a -> to check even the hidden files folders too.

6. copy the https link from under the code button from github website.

7. in terminal: git remote add origin https:<github proect link>
9. cd .git/ -> to get into the .git folder.
8. ls -a -> to check even the hidden list.

9. see if config is there in .git folder.
10. cat config -> access config using.
11. check if there is an url in the config file.
12. cd.. to get back to previous directory.
13. git status -> to check the status of the git tracker.

14. we will not add node modules.
15. use gitignore to ignore the recomended files. One has to just add the file or folder name in the gitignore file to ignore it tracking from git.

16. git add file name -> to add to git. so that git can track it.
17. use git add . -> to add and trac all the files.
18. git comit -m "Add first commit" -> to finish the work.
19. git branch -> to see all the branch.
20. git branch iqbal/first-project -> to create a new branch.

21. git branch -> to see the branch.

22. git switch iqbal/first-project -> to switch to the new branch
23. git push origin iqbal/first-project

23. git log ---oneline

# if we create a branch from an existing branch, then all the commits will also be in the new branch.

24. there are three types of merge:
     i. rebase merge : master stays at master's place and the new commits stays after that.

     ii. normal merge : git merge (branch name).
     iii. squash merge : 1 commit for all the changes.

# Instruction:
    a. git add.
    b. git commit -m <commit message>
    if push:
        1. git fetch.
        2. git rebase origin /develop.
    
    single push comand:
        1. git pull --rebase origin /develop
    push:
        * git push --force-with-lease origin <your branch>

{
x normal merge:
    if push:
        1. git fetch.
        2. git merge origin /develop.
    
    single push comand:
        1. git pull origin /develop
}

* rm -fr .git -> remove the .git folder.
* git push origin -d iqbal/first-project -> delete the wanted branch.